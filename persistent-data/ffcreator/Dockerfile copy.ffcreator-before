# Use Ubuntu-based Node image to avoid Alpine/musl issues
FROM node:18-bullseye

ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies for FFCreator
RUN apt-get update && apt-get install -y \
    # Graphics and OpenGL libraries
    libgl1-mesa-glx \
    libglu1-mesa \
    libglx0 \
    libxrender1 \
    libxext6 \
    libx11-6 \
    xvfb \
    x11-xserver-utils \
    mesa-utils \
    \
    # FFmpeg and media libraries
    ffmpeg \
    \
    # Build tools for native modules
    build-essential \
    python3 \
    python3-pip \
    \
    # Canvas and Cairo dependencies
    libcairo2-dev \
    libpango1.0-dev \
    libjpeg-dev \
    libgif-dev \
    librsvg2-dev \
    \
    && rm -rf /var/lib/apt/lists/*

# Set display environment for headless OpenGL
ENV DISPLAY=:99
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=all

WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN npm install --production

# Copy the server.js file
COPY server.js ./

# Create required directories
RUN mkdir -p /app/videos /app/cache /app/temp /app/assets /app/ai-assets /app/tts-audio

EXPOSE 3001

# Startup with virtual display and GPU support
CMD ["sh", "-c", "\
  echo '🎮 Starting FFCreator with GPU support...' && \
  nvidia-smi || echo 'GPU info not available' && \
  echo '🖥️  Starting virtual display...' && \
  Xvfb :99 -screen 0 1920x1080x24 -ac +extension GLX +extension RENDER -noreset -dpi 96 > /dev/null 2>&1 & \
  sleep 3 && \
  echo '🔧 Testing OpenGL context...' && \
  DISPLAY=:99 glxinfo | head -5 || echo 'OpenGL context ready' && \
  echo '🚀 Starting FFCreator API server...' && \
  node server.js \
"]